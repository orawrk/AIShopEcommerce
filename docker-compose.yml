version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: ecommerce_mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ecommerce
      MYSQL_USER: ecommerce_user
      MYSQL_PASSWORD: ecommerce_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  fastapi_backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: ecommerce_backend
    environment:
      DATABASE_URL: mysql+pymysql://ecommerce_user:ecommerce_pass@mysql:3306/ecommerce
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_NAME: ecommerce
      DATABASE_USER: ecommerce_user
      DATABASE_PASSWORD: ecommerce_pass
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce_network
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  streamlit_frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ecommerce_frontend
    environment:
      BACKEND_URL: http://fastapi_backend:8000
    ports:
      - "5000:5000"
    depends_on:
      - fastapi_backend
    networks:
      - ecommerce_network
    volumes:
      - ./frontend:/app
    command: streamlit run app.py --server.port 5000 --server.address 0.0.0.0

volumes:
  mysql_data:

networks:
  ecommerce_network:
    driver: bridge